The cost of stock on each day is given in an array price[]. Each day you may decide to either buy or sell the stock i at price[i], you can even buy and sell the stock on the same day. Find the maximum profit that you can get.
Note: A stock can only be sold if it has been bought previously and multiple stocks cannot be held on any given day.

class Solution {
    static int maximumProfit(int prices[]) {
       int n = prices.length;
       int lMin = prices[0];
       int lMax = prices[0];
       int res = 0;
       int i = 0;
       while(i < n - 1){
           while(i < n-1 && prices[i] >= prices[i + 1]){ i++;}
            lMin = prices[i];
            while(i < n-1 && prices[i] <= prices[i + 1]){ i++;}
                lMax = prices[i];
            
            res +=(lMax - lMin);
           }
           return res;
       }
       public static void main(String[] args){
           int[] prices = {100,180,260,310,40,535,695};
           System.out.println(maximumProfit(prices));
       
        
    }
}
